[buildout]
develop = .

# buildout options
show-picked-versions = true
newest = false
download-cache = downloads
versions = versions

## extensions

# use python site-packages
# https://pypi.python.org/pypi/buildout.locallib/ 
extensions = buildout.locallib

parts = 
    conda
    hummingbird
    pywps
    ipython
    nose
    docker
      
[settings]
proxy-enabled = false
hostname = localhost
http-port = 8092
output-port = 8090
archive_root = 
esgsearch_url = http://localhost:8081/esg-search

[versions]
#zc.buildout=2.2.5

[conda]
recipe = birdhousebuilder.recipe.conda
pkgs = 
     python
     ipython
     ipython-notebook
     malleefowl
     pycdo
     netcdf4
     owslib
     pywps

[hummingbird]
recipe = zc.recipe.egg
eggs =
     malleefowl
     cdo
interpreter = python

[pywps]
recipe = birdhousebuilder.recipe.pywps
sites = hummingbird
proxyEnabled = ${settings:proxy-enabled}
processesPath = ${buildout:directory}/processes
hostname = ${settings:hostname}
port = ${settings:http-port}
output_port = ${settings:output-port}

title = Hummingbird
abstract = WPS processes for general tools used in the climate science community like cdo 
# TODO: should only be configured in malleefowl
# esgf archive root: list of file archive root folders separated by ":" like PATH
# overwrites enivronment ESGF_ARCHIVE_ROOT
archive_root = ${settings:archive_root}
# TODO: should only be configured in malleefowl
esgsearch_url = ${settings:esgsearch_url}

[ipython]
recipe = zc.recipe.egg
eggs =
    ipython
    ${hummingbird:eggs}
entry-points =
   ipython=IPython:start_ipython
scripts =
    ipython=ipython

[nose]
recipe = zc.recipe.egg
eggs =
    nose
    ${hummingbird:eggs}
entry-points =
    nosetests=nose:run_exit
scripts =
    nosetests=nosetests

[docker]
recipe = birdhousebuilder.recipe.docker
image-name = ubuntu
image-version = 14.04
maintainer = Hummingbird WPS Application




 


